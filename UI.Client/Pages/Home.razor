@page "/"
@using LaPelicula.UI.Client.Components
@inject IJSRuntime JsRuntime
@rendermode InteractiveWebAssembly


<PageTitle>La Pelicula – Pick a movie to watch</PageTitle>


<main>
    <div class="content-wrapper @(_showMovies ? "" : "hidden")">
        <section class="hero">
            <h1>You might like <span class="highlight">these movies</span></h1>
            <p>A carefully curated collection of movies selected just for you.</p>
        </section>
        
        <MovieSlideshow @ref="_movieSlideshow" NoCookieFound="NoCookieFoundAsync"></MovieSlideshow>
        
        <div class="actions-panel">
            <button class="button" @onclick="TriggerPreferencesAsync">Adjust your preferences</button>
        </div>
    </div>
    <UserPreferencesOverlay @ref="_userPreferencesOverlay" VisibilityChanged="OnOverlayVisibilityChanged" ValueChanged="RefreshRecommendationsAsync"></UserPreferencesOverlay>
    
</main>



@code {
    private UserPreferencesOverlay? _userPreferencesOverlay;
    private MovieSlideshow? _movieSlideshow;
    private bool _showMovies = true;
    
    private void OnOverlayVisibilityChanged(bool shown)
    {
        _showMovies = !shown;
    }
    
    private async Task TriggerPreferencesAsync() =>  
        await (_userPreferencesOverlay?.TriggerPreferencesAsync() ?? Task.FromException(new InvalidOperationException("Component reference is null")));

    private async Task NoCookieFoundAsync()
    {
        await TriggerPreferencesAsync();
    }
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // on the backend during prerendering OnAfterRenderAsync is not called giving us our desired behavior – the loading indicator will be shown over the prerendered stubbed recommendations
        if (firstRender)
        {
            await JsRuntime.InvokeVoidAsync("hideAppLoadingIndicator");
        }
    }


    private async Task RefreshRecommendationsAsync()
    {
        await (_movieSlideshow?.RefreshAsync() ?? Task.FromException(new InvalidOperationException("Component reference is null")));
    }

}